---
import Layout from '../../layouts/Layout.astro';
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import site from '../../data/site.json';
import { getCollection } from 'astro:content';

export interface Props {
  post: any;
}

const { posts, post, canonicalURL = Astro.url } = Astro.props;

let title = 'Morsels';
let slug = '/morsels';
let description = "A list of code snippets and scripts I've written. Not too big, not too small. They're like tasty morsels.";
let domain = "https://lukealexdavis.co.uk"

export async function getStaticPaths({paginate}) {
  const allPosts = await getCollection('morsels');
  const sortedPosts = allPosts.sort((a, b) => new Date(b.data.pubDate) - new Date(a.data.pubDate));
  return paginate(sortedPosts, { pageSize: 25 });
}

const { page } = Astro.props;
---
<html lang="en">
  <head>
    <BaseHead title={title} description={description} canonicalURL={canonicalURL} />
  </head>

  <body>
    <Header />
    <div class="layout">
      <article class="content">
        <section class="intro">
          <h1>{title}</h1>
        </section>
        <section>
          <p>This is a list of code snippets and scripts I've written. Not too big, not too small. They're like tasty morsels.</p>
          <p>You can also follow my morsels <a href="/morsels.xml">RSS feed</a>.</p>
        </section>
        <hr>
    <section>
       <ul class="post-list">
      {page.data.map(morsel => (
            <li class="post-listing">
              <a href={`/morsels/${morsel.slug}/`}>{morsel.data.title}</a>
              <span class="publish-date"><FormattedDate date={morsel.data.pubDate}/></span>
            </li>
          ))}
        </ul>
    </section>
        <div class="page-links">{page.url.prev && (
          <a
            class='prev'
            href={page.url.prev + '/' || '#'}
          >
            &laquo; Prev
          </a>
        )}
        {page.url.prev && page.url.next && ""}
        {page.url.next && (
          <a
            class='Next'
            href={page.url.next + '/' || '#'}
          >
            Next &raquo;
          </a>
        )}</div>
      </article>      
    </div>
    <Footer/>
  </body>
</html>
