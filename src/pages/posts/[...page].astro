---
import Layout from '../../layouts/Layout.astro';
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import site from '../../data/site.json';
import { getCollection } from 'astro:content';

export async function getStaticPaths({paginate}) {
  const allPosts = await getCollection('posts');
  const sortedPosts = allPosts.sort((a, b) => new Date(b.data.pubDate) - new Date(a.data.pubDate));
  return paginate(sortedPosts, { pageSize: 25 });
}

const { page, canonicalURL = Astro.url } = Astro.props

function postsByYear(posts: Post[]) {
  interface PostsByYearData {
    year: number
    items: Post[]
  }

  const postsByYearMap = posts.reduce(function(acc, post) {
    const year = new Date(post.data.pubDate).getFullYear()
    const existing = acc.get(year)?.items || []
    acc.set(year, {
      year,
      items: existing.concat(post)
    })
    return acc;
  }, new Map<number, PostsByYearData>())

  return [...postsByYearMap.values()]
    .sort((a, b) => b.year - a.year);
}

const postGroups = postsByYear(page.data)

let domain = 'https://lukealexdavis.co.uk';
let fullTitle = `Posts (Page ${page.currentPage}/${page.lastPage})`
let description = "The blog listings page. I write about all kinds of topics including SEO, AI, music, life, and the Web.";
---
<Layout title={fullTitle} description={description} canonicalURL={canonicalURL} />
    <div class="layout">
      <article class="content">
        <section class="intro">
          <h1>{fullTitle}</h1>
        </section>
        <section>
          <p>Welcome to my blog.</p>
          <p>I write about all kinds of topics including SEO, AI, music, life, and the Web. You can also follow the blog via an <a href="/blog.xml">RSS feed</a> wherever you get your RSS feeds... read?</p>
          <p>I also write <a href="/release-notes/">Release Notes</a>, for when I want to get things off my chest, and <a href="/morsels/">Morsels</a>, which relate to cool coding stuff I've made.</p>
        </section>
    {postGroups.map(({ year, items }) => (
  <section>
    <hr>
    <h2>{year}</h2>
    <ul class="post-list">
    {items.map((post) => (
      <li class="post-listing">
        <a href={`/posts/${post.slug}/`}><Fragment set:html={post.data.title}></a>
          <span class="publish-date"><FormattedDate date={post.data.pubDate} /></span>
      </li>
    ))}
    </ul>
    </section>
      ))}    
        <div class="page-links">{page.url.prev && (
          <a class='prev' href={page.url.prev || '#'}>&laquo; Prev</a>
        )}
        {page.url.prev && page.url.next && ""}
        {page.url.next && (
          <a class='Next' href={page.url.next || '#'}>Next &raquo;</a>
        )}</div>
      </article>
    </div>
    <Footer />